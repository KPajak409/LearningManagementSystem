@page
@model LMS.Pages.Activities.DetailsActivityModel
@using System.Web
@using System.Runtime
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<div class="m-3 pt-2">
    <div class="d-flex flex-row justify-content-between">
        <h4>@Html.DisplayFor(model => model.Activity.Name)</h4>
        @if(User.IsInRole("Teacher") || User.IsInRole("Admin"))
        {
            <a asp-page="./ActivityUserResponses" asp-route-activityId="@Model.Activity.Id" asp-route-courseId="@Model.Course.Id"class="btn-primary btn">Student Responses</a>
        }
        
    </div>
    
    <hr />
    <div class="activity-details">@Html.DisplayFor(model => model.Activity.Details)</div>
    <hr />
    <dl class="row me-1">
        
        @if(Model.Activity.StartTime != null)
        {
        <dt class="col-sm-2">
           Start Time
        </dt> 
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Activity.StartTime)
        </dd>
        }
         @if(Model.Activity.EndTime != null)
        {
        <dt class="col-sm-2">
            End Time
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Activity.EndTime)
        </dd>
        }     
        @if(Model.Activity.ActivityType != ActivityType.Information)
        {
            @if(Model.UserResponse.EarnedPoints == null)
            {
            <dt class="col-sm-2">
                Points to get
            </dt>
            <dd class="col-sm-10">
                0/@Html.DisplayFor(model => model.Activity.Points)
                </dd>
            } else if(Model.UserResponse.EarnedPoints != null && !User.IsInRole("Teacher"))
            {
            <dt class="col-sm-2">
                Points to get
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UserResponse.EarnedPoints)/@Html.DisplayFor(model => model.Activity.Points)
            </dd>
            }
            @if(!User.IsInRole("Teacher"))
            {

            @if(Model.UserResponse.Status == ActivityStatus.NotAssesed)
            {
            <dt class="col-sm-2">
                Status
            </dt> 
            <dd class="col-sm-10 border rounded bg-danger text-light">
                Not assessed
            </dd>
            } else if(Model.UserResponse.Status == ActivityStatus.Assessed)
            {
            <dt class="col-sm-2">
                Status
            </dt> 
            <dd class="col-sm-10 border rounded bg-success text-light">
                Assessed
            </dd>
            }     else if(Model.UserResponse.Status == ActivityStatus.Pending)
            {
            <dt class="col-sm-2">
                Status
            </dt> 
            <dd class="col-sm-10 border rounded bg-warning text-dark">
                Pending
            </dd>
            }  
                            
            }
        }
         
        
        @if(Model.Activity.FileNames != null)
        {
            <dt class="col-sm-2">
                Included files
            </dt>
            <dd class="col-sm-10">
                <div class="">
                    @foreach(var file in Model.DownloadedFiles)
                    {                     
                        if(file.Owner == Models.OwnerType.Teacher)
                        {
                             <ul class="d-flex flex-row list-group"> 
                                 <li class="col-sm-3 list-group-item me-2">@file.FileName</li>
                                 <li class="btn btn-primary bg-secondary list-group-item">
                                     <a href="@Url.Page("ActivityDetails", "DownloadActivityFile", new { fileName = file.FileName})" class="btn btn-secondary">Download</a>
                                 </li>
                            </ul>
                        }                  
                    }
                </div>
            </dd>
        }
       
        </dl>
        <hr />
        <div class="mt-1">
            @if(Model.Activity.ActivityType != ActivityType.Information && !User.IsInRole("Teacher") )
            {
                @if(string.IsNullOrEmpty(Model.UserResponse.Response) && Model.UserResponse.Status == ActivityStatus.NotAssesed)
                {
                <form method="post" enctype="multipart/form-data">
                     <div class="form-group mb-2 upload-file">
                    <label class="control-label"></label>
                    <input type="file" asp-for="Files" multiple />
                    </div>
                    <div class="form-group">
                        <textarea id="txtArea" asp-for="UserResponse.Response" style="width: 100%; height: 20vh;"></textarea>
                        <span asp-validation-for="UserResponse.Response" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="hidden" asp-for="Activity.Id" />
                    </div>
                    <div class="form-group m-2">
                        <input type="submit" value="Send" class="btn btn-primary" />
                    </div>
                </form>
            
                }
                else
                {
                <div class="user-response container px-0 mb-1">
                    <p class="fw-bold">Your response:</p>                       
                        <div class="">
                    @foreach(var file in Model.DownloadedFiles)
                    {
                        
                        if(file.Owner == Models.OwnerType.Student)
                        {
                             <ul class="d-flex flex-row list-group"> 
                                 <li class="col-sm-3 list-group-item">@file.FileName</li>
                                 <li class="btn bg-secondary btn-primary list-group-item">
                                     <a href="@Url.Page("ActivityDetails", "DownloadResponseFile", new { fileName = file.FileName})" class="btn btn-secondary">Download</a>
                                     </li>
                            </ul>
                        }
                       
                    }
                    </div>
                 
                
                    <div class="user-response-text border p-1 mt-1">
                        @Html.Raw(Model.UserResponse.Response)
                    </div>
                </div>
               
                }
            }
            
        </div>
    <div class="teacher-response">
        <dl>
            @if(Model.UserResponse.Comment != null)
            {
            <dt class="col-sm-2">
                Comment
            </dt>
            <dd class="col-sm-10">
                <div class="border p-1">
                @Html.DisplayFor(model => model.UserResponse.Comment)
                </div>
            </dd>
            }
            </dl>       
    </div>
    
</div>
<div class="ms-3 me-3 pb-3 d-flex flex-row justify-content-between">
     
     <a href='javascript:history.go(-1)'>Back to course</a>
     @if(User.IsInRole("Teacher") || User.IsInRole("Admin"))
     {
         <div>
        
        <a asp-page="../Activities/EditActivity" asp-route-activityId="@Model.Activity.Id" class="btn btn-primary">Edit</a>
        <a asp-page="../Activities/DeleteActivity" asp-route-activityId="@Model.Activity.Id" asp-route-courseId="@Model.Course.Id" class="btn btn-danger">Delete</a>
        </div>
     }
    
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
 <script src="https://cdn.tiny.cloud/1/q38xgbr30eh8ekil5frr1secqbrw3t0rxik53eoz5td9auw0/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
 <script>
    tinymce.init({
      selector: 'textarea',
      plugins: '',
      menubar: 'undo redo | bold italic underline | alignleft aligncenter alignright',
      tinycomments_mode: 'embedded',
      tinycomments_author: 'Author name',
    }); 
</script>